# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
	
#	server {
#        listen       9070;
#        server_name  test_web;
#
#        location / {
#            root   /usr/website/test;
#            index  index.html;
#        }
#
# 
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }
#    }
	
	server {
        listen       9071;
        server_name  dam_test;
		
		location /daw {
            alias  /usr/website/daw;
            index  index.html;
			try_files $uri $uri/ /daw/index.html;
        }
		
		location /mdam {
            alias  /usr/website/mdam;
            index  index.html;
#			try_files $uri $uri/ /index.html;
        }
		
#		location /warning {
#			proxy_pass http://172.16.0.250:9960;
#			
#			#指定允许跨域的方法，*代表所有
#			add_header Access-Control-Allow-Methods *;
#
#			#预检命令的缓存，如果不缓存每次会发送两次请求
#			add_header Access-Control-Max-Age 3600;
#			#带cookie请求需要加上这个字段，并设置为true
#			add_header Access-Control-Allow-Credentials true;
#
#			#表示允许这个域跨域调用（客户端发送请求的域名和端口） 
#			#$http_origin动态获取请求客户端请求的域   不用*的原因是带cookie的请求不支持*号
#			add_header Access-Control-Allow-Origin $http_origin;
#
#			#表示请求头的字段 动态获取
#			add_header Access-Control-Allow-Headers 
#			$http_access_control_request_headers;
#
#			#OPTIONS预检命令，预检命令通过时才发送请求
#			#检查请求的类型是不是预检命令
#			if ($request_method = OPTIONS){
#				return 200;
#			}
#		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

server {
        listen       9960;
        server_name  localhost;

        location /static/ {
		    alias /usr/local/huaihe/;
		}

         location /warning/ {
             add_header Access-Control-Allow-Origin *;
		 	add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
		 	add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

		 	if ($request_method = 'OPTIONS') {
		 		return 200;
		 	}
		 	proxy_pass http://localhost:9998/warning/;
         }
}
# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }


}

